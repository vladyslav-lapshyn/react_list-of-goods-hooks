{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","setVisibleGoods","isChanged","useEffect","goods","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,mBAASF,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACMC,EAAYN,IAAaL,EAASI,MAAQG,EAShD,OAPAK,qBAAU,WACRF,EAjCG,SACLG,EADK,GAGJ,IADCR,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOI,GAEzB,OAAQR,GACN,KAAKL,EAASc,SACZL,EAAaM,OACb,MAEF,KAAKf,EAASgB,OACZP,EAAaM,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAW7C,OAJIZ,GACFE,EAAaW,UAGRX,EAUWY,CACdpB,EACA,CAAEI,WAAUE,kBAEb,CAACF,EAAUE,IAGZ,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAYN,EAASc,WACpCQ,UAAWG,IAAG,iBAAkB,CAC9B,WAAYpB,IAAaL,EAASc,WAJtC,iCAUA,wBACES,KAAK,SACLC,QAAS,kBAAMlB,EAAYN,EAASgB,SACpCM,UAAWG,IAAG,oBAAqB,CACjC,WAAYpB,IAAaL,EAASgB,SAJtC,4BAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMhB,GAAeD,IAC9Be,UAAWG,IAAG,oBAAqB,CACjC,YAAalB,IAJjB,qBAUCI,GACC,wBACEY,KAAK,SACLC,QAAS,WACPlB,EAAYN,EAASI,MACrBI,GAAc,IAEhBc,UAAU,4BANZ,sBAaJ,6BACGb,EAAaiB,KAAI,SAACC,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCnHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33a5a265.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const isChanged = sortType !== SortType.NONE || isReversed;\n\n  useEffect(() => {\n    setVisibleGoods(getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    ));\n  }, [sortType, isReversed]);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.ALPHABET)}\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {isChanged && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}